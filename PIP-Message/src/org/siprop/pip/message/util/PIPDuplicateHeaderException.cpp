/** Conditions Of Use * * This software was developed by employees of the National Institute of* Standards and Technology (NIST), an agency of the Federal Government.* Pursuant to title 15 Untied States Code Section 105, works of NIST* employees are not subject to copyright protection in the United States* and are considered to be in the public domain.  As a result, a formal* license is not needed to use the software.* * This software is provided by NIST as a service and is expressly* provided "AS IS."  NIST MAKES NO WARRANTY OF ANY KIND, EXPRESS, IMPLIED* OR STATUTORY, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTY OF* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT* AND DATA ACCURACY.  NIST does not warrant or make any representations* regarding the use of the software or the results thereof, including but* not limited to the correctness, accuracy, reliability or usefulness of* the software.* * Permission to use this software is contingent upon your acceptance* of the terms of this agreement*  * .* *//******************************************************************************** Product of NIST/ITL Advanced Networking Technologies Division (ANTD)         ********************************************************************************/package org.siprop.pip.message.util;import java.text.ParseException;import org.siprop.pip.message.PIPMessage;import org.siprop.pip.message.header.PIPHeader;/** * Duplicate header exception:  thrown when there is more * than one header of a type where there should only be one. * The exception handler may choose to :  * 1. discard the duplicate  by returning null * 2. keep the duplicate by just returning it. * 3. Discard the entire message by throwing an exception. * @version 1.2 $Revision: 1.4 $ $Date: 2006/07/13 09:02:46 $ * @since 1.1 * @author M. Ranganathan  */public class PIPDuplicateHeaderException extends ParseException {	protected PIPHeader pipHeader;	protected PIPMessage pipMessage;	public PIPDuplicateHeaderException(String msg) {		super(msg, 0);	}	public PIPMessage getPIPMessage() {		return pipMessage;	}	public PIPHeader getPIPHeader() {		return pipHeader;	}	public void setPIPHeader(PIPHeader pipHeader) {		this.pipHeader = pipHeader;	}	public void setPIPMessage(PIPMessage pipMessage) {		this.pipMessage = pipMessage;	}}